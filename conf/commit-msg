#!/bin/sh

# 커밋 메시지 파일 경로
commit_msg_file=$1

# 커밋 메시지 패턴
header_regex='^\[(feat|bugfix|refactor|style|doc|test|build|chore|delete|infra)\] .+$'
single_line_body_regex='^.{1,72}$'
multi_line_body_regex='^- .{1,72}$'
footer_regex='^closes #[0-9]+$'

# 메시지 검증
error_msg=""

# 주석을 제외한 라인을 추출하여 임시 파일에 저장
grep -v '^#' "$commit_msg_file" > /tmp/commit_msg_tmp

# 제목 검증
first_line=$(sed -n '1p' /tmp/commit_msg_tmp)
if ! echo "$first_line" | grep -Eq "$header_regex"; then
  error_msg="${error_msg}\nError: 제목 형식이 올바르지 않습니다."
fi

# 제목과 본문 사이의 빈 줄 검증
second_line=$(sed -n '2p' /tmp/commit_msg_tmp)
if [ -n "$second_line" ]; then
  error_msg="${error_msg}\nError: 제목과 본문 사이에 빈 줄을 추가하세요."
fi

# 본문 검증
in_body=false
body_line_count=0
while IFS= read -r line; do
  # 빈 줄이면 본문 검증 시작
  if [ -z "$line" ]; then
    in_body=true
    continue
  fi

  if $in_body; then
    body_line_count=$((body_line_count + 1))
    # 본문 형식을 검증합니다 (단일 줄 또는 여러 줄)
    if [ "$body_line_count" -eq 1 ]; then
      if ! echo "$line" | grep -Eq "$single_line_body_regex"; then
        error_msg="${error_msg}\nError: 본문 형식이 올바르지 않습니다. 한 줄에 최대 72 글자까지 입력하세요."
        break
      fi
    else
      if ! echo "$line" | grep -Eq "$multi_line_body_regex"; then
        error_msg="${error_msg}\nError: 본문 형식이 올바르지 않습니다. 여러 줄의 본문은 각 줄에 '-'로 시작해야 합니다."
        break
      fi
    fi
  fi
done < /tmp/commit_msg_tmp

# 꼬리말 검증
last_line=$(tail -n 1 /tmp/commit_msg_tmp)
if [ -n "$last_line" ] && ! echo "$last_line" | grep -Eq "$footer_regex"; then
  error_msg="${error_msg}\nError: 꼬리말 형식이 올바르지 않습니다."
fi

# 임시 파일 삭제
rm /tmp/commit_msg_tmp

# 커밋 메시지 형식 오류가 있는 경우
if [ -n "$error_msg" ]; then
  echo -e "$error_msg"
  exit 1
fi
